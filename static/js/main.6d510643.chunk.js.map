{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","theme","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAEaA,EAAO,SAAAC,GAAK,OACrB,sBAA4BC,UAAU,iBAAtC,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAEMH,EAAMI,QAAQC,GAFpB,mBAEiCL,EAAMM,MAFvC,mBAKtB,6BAAKN,EAAMI,QAAQG,OACnB,4BAAIP,EAAMI,QAAQI,UAPZR,EAAMI,QAAQC,KCGfI,G,MAAW,SAAAT,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAEID,EAAMU,SAASC,KAAI,SAAAP,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,EAASE,MAAON,EAAMM,OAA3CF,EAAQC,WCPlBO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIb,UAAY,SACZc,KAAO,SACPF,YAAeA,EACfG,SAAYF,MCiDLG,E,kDApDb,aAAc,IAAD,8BACX,gBAeFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAdrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,GACbd,MAAM,KANG,E,qDAUb,WAAoB,IAAD,OACjBkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAO1C,WAAS,IAAD,OACN,EAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK/B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACEY,YAAc,kBACdC,aAAgBe,KAAKf,eAEvB,yBAAQE,SAAU,SAAAE,GAAC,OAAI,EAAKC,SAAS,CAACb,MAAMY,EAAEG,OAAOC,SAArD,UACE,wBAAQA,MAAM,IAAd,qBAEA,wBAAQA,MAAM,IAAd,qBAEA,wBAAQA,MAAM,IAAd,qBAEA,wBAAQA,MAAM,IAAd,qBAEA,wBAAQA,MAAM,IAAd,wBAGJ,cAAC,EAAD,CAAUZ,SAAUoB,EAAkBxB,MAAOuB,KAAKN,MAAMjB,e,GA9C9C4B,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6d510643.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\nexport const Card = props => (\r\n    <div key={props.monster.id} className='card-container'>\r\n        <img alt=\"monster\" src= \r\n        {\r\n            `https://robohash.org/${props.monster.id}?set=set${props.theme}&size=180x180`\r\n        }\r\n        ></img>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport'./card-list.style.css'\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n    {\r\n        props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster} theme={props.theme}/>  \r\n        ))\r\n    }\r\n    </div>\r\n   \r\n);\r\n\r\n","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n        className = 'search'\r\n        type = 'search'\r\n        placeholder = {placeholder}\r\n        onChange = {handleChange}\r\n    />\r\n);","import './App.css';\nimport { Component } from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component'\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n      theme:'1'\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  handleChange = e => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n    return (\n      <div className=\"App\">\n          <h1>Monsters Rolodex</h1>\n          <SearchBox\n            placeholder = 'search monsters'\n            handleChange = {this.handleChange}\n          />\n          <select onChange={e => this.setState({theme:e.target.value})}>\n            <option value='1'>Theme 1\n            </option>\n            <option value='2'>Theme 2\n            </option>\n            <option value='3'>Theme 3\n            </option>\n            <option value='4'>Theme 4\n            </option>\n            <option value='5'>Theme 5\n            </option>\n          </select>\n        <CardList monsters={filteredMonsters} theme={this.state.theme}/>\n      </div>\n    );\n  }\n  }\n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}